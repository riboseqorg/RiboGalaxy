{"version": "0.1", "tests": [{"id": "functional.test_toolbox.TestForTool_get_chrom_sizes.test_tool_000000", "has_data": true, "data": {"tool_id": "get_chrom_sizes", "tool_version": "2.2", "test_index": 0, "time_seconds": 0.03559470176696777, "inputs": {"input2": "chr", "refGenomeSource|input1": "test.fasta"}, "execution_problem": "parameter 'input1': requires a value, but no legal values defined", "dynamic_param_error": true, "status": "error", "problem_type": "galaxy.tool_util.verify.interactor.RunToolException", "problem_log": "  File \"/home/jack/anaconda3/envs/ribogalaxy/lib/python3.9/unittest/case.py\", line 59, in testPartExecutor\n    yield\n  File \"/home/jack/anaconda3/envs/ribogalaxy/lib/python3.9/unittest/case.py\", line 592, in run\n    self._callTestMethod(testMethod)\n  File \"/home/jack/anaconda3/envs/ribogalaxy/lib/python3.9/unittest/case.py\", line 550, in _callTestMethod\n    method()\n  File \"/tmp/tmp451ywuqv/galaxy-dev/test/functional/test_toolbox.py\", line 98, in test_tool\n    self.do_it(tool_version=tool_version, test_index=test_index)\n  File \"/tmp/tmp451ywuqv/galaxy-dev/test/functional/test_toolbox.py\", line 35, in do_it\n    verify_tool(tool_id, self.galaxy_interactor, resource_parameters=resource_parameters, test_index=test_index, tool_version=tool_version, register_job_data=register_job_data)\n  File \"/tmp/tmp451ywuqv/galaxy-dev/lib/galaxy/tool_util/verify/interactor.py\", line 1112, in verify_tool\n    raise e\n  File \"/tmp/tmp451ywuqv/galaxy-dev/lib/galaxy/tool_util/verify/interactor.py\", line 1105, in verify_tool\n    tool_response = galaxy_interactor.run_tool(testdef, test_history, resource_parameters=resource_parameters)\n  File \"/tmp/tmp451ywuqv/galaxy-dev/lib/galaxy/tool_util/verify/interactor.py\", line 469, in run_tool\n    submit_response_object = ensure_tool_run_response_okay(submit_response, \"execute tool\", inputs_tree)\n  File \"/tmp/tmp451ywuqv/galaxy-dev/lib/galaxy/tool_util/verify/interactor.py\", line 817, in ensure_tool_run_response_okay\n    raise RunToolException(message, inputs, dynamic_param_error=dynamic_param_error)\nparameter 'input1': requires a value, but no legal values defined\n-------------------- >> begin captured logging << --------------------\nmultipart.multipart: DEBUG: Calling on_field_start with no data\nmultipart.multipart: DEBUG: Calling on_field_name with data[0:4]\nmultipart.multipart: DEBUG: Calling on_field_data with data[5:50]\nmultipart.multipart: DEBUG: Calling on_field_end with no data\nmultipart.multipart: DEBUG: Calling on_end with no data\n--------------------- >> end captured logging << ---------------------"}}], "summary": {"num_tests": 1, "num_failures": 0, "num_errors": 1, "num_skips": 0}, "exit_code": 1}